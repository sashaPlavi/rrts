[{"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\index.tsx":"1","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\App.tsx":"2","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\components\\QuestionCard.tsx":"3","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\API.ts":"4","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\utils.ts":"5"},{"size":218,"mtime":1608713027812,"results":"6","hashOfConfig":"7"},{"size":1516,"mtime":1608760884703,"results":"8","hashOfConfig":"7"},{"size":851,"mtime":1608758783563,"results":"9","hashOfConfig":"7"},{"size":897,"mtime":1608846845429,"results":"10","hashOfConfig":"7"},{"size":94,"mtime":1608847250178,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yn7eoy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\index.tsx",[],["24","25"],"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\App.tsx",["26","27","28","29","30","31","32","33","34","35","36","37","38","39"],"import React, { useState } from 'react';\r\n\r\nimport { fetchQuizQuestion, Difficulty } from './API';\r\n//types\r\n\r\nimport styled from 'styled-components';\r\nimport QusestionCard from './components/QuestionCard';\r\n\r\nconst TOTAL_QUESTIONS = 10;\r\n\r\nconst MainWraper = styled.section`\r\n  width: 100%;\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst App = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [questions, setQuestions] = useState([]);\r\n  const [number, setNumber] = useState(0);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [score, setscore] = useState(0);\r\n  const [gameOver, setgameOver] = useState(true);\r\n\r\n  console.log(fetchQuizQuestion(TOTAL_QUESTIONS, Difficulty.EASY));\r\n\r\n  const StartTrivia = async () => {};\r\n  const CheckAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\r\n  const NextQuestion = () => {};\r\n\r\n  return (\r\n    <MainWraper>\r\n      <h1>React Quiz</h1>\r\n      <button className=\"start\" onClick={StartTrivia}>\r\n        Start\r\n      </button>\r\n      <p className=\"score\">Score:10</p>\r\n      <p>Loadin Questios</p>\r\n      <button className=\"next\" onClick={NextQuestion}>\r\n        Next Question\r\n      </button>\r\n      {/* <QusestionCard\r\n        questionNumber={number + 1}\r\n        totalQuestions={TOTAL_QUESTIONS}\r\n        question={questions[number].question}\r\n        answers={questions[number].answers}\r\n        userAnwers={userAnswers ? userAnswers[number] : undefined}\r\n      /> */}\r\n    </MainWraper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\components\\QuestionCard.tsx",[],"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\API.ts",["40"],"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\utils.ts",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":7,"column":8,"nodeType":"47","messageId":"48","endLine":7,"endColumn":21},{"ruleId":"45","severity":1,"message":"49","line":18,"column":10,"nodeType":"47","messageId":"48","endLine":18,"endColumn":17},{"ruleId":"45","severity":1,"message":"50","line":18,"column":19,"nodeType":"47","messageId":"48","endLine":18,"endColumn":29},{"ruleId":"45","severity":1,"message":"51","line":19,"column":10,"nodeType":"47","messageId":"48","endLine":19,"endColumn":19},{"ruleId":"45","severity":1,"message":"52","line":19,"column":21,"nodeType":"47","messageId":"48","endLine":19,"endColumn":33},{"ruleId":"45","severity":1,"message":"53","line":20,"column":10,"nodeType":"47","messageId":"48","endLine":20,"endColumn":16},{"ruleId":"45","severity":1,"message":"54","line":20,"column":18,"nodeType":"47","messageId":"48","endLine":20,"endColumn":27},{"ruleId":"45","severity":1,"message":"55","line":21,"column":10,"nodeType":"47","messageId":"48","endLine":21,"endColumn":21},{"ruleId":"45","severity":1,"message":"56","line":21,"column":23,"nodeType":"47","messageId":"48","endLine":21,"endColumn":37},{"ruleId":"45","severity":1,"message":"57","line":22,"column":10,"nodeType":"47","messageId":"48","endLine":22,"endColumn":15},{"ruleId":"45","severity":1,"message":"58","line":22,"column":17,"nodeType":"47","messageId":"48","endLine":22,"endColumn":25},{"ruleId":"45","severity":1,"message":"59","line":23,"column":10,"nodeType":"47","messageId":"48","endLine":23,"endColumn":18},{"ruleId":"45","severity":1,"message":"60","line":23,"column":20,"nodeType":"47","messageId":"48","endLine":23,"endColumn":31},{"ruleId":"45","severity":1,"message":"61","line":28,"column":9,"nodeType":"47","messageId":"48","endLine":28,"endColumn":20},{"ruleId":"45","severity":1,"message":"62","line":1,"column":8,"nodeType":"47","messageId":"48","endLine":1,"endColumn":20},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'QusestionCard' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'questions' is assigned a value but never used.","'setQuestions' is assigned a value but never used.","'number' is assigned a value but never used.","'setNumber' is assigned a value but never used.","'userAnswers' is assigned a value but never used.","'setUserAnswers' is assigned a value but never used.","'score' is assigned a value but never used.","'setscore' is assigned a value but never used.","'gameOver' is assigned a value but never used.","'setgameOver' is assigned a value but never used.","'CheckAnswer' is assigned a value but never used.","'QuestionCard' is defined but never used.","no-global-assign","no-unsafe-negation"]