[{"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\index.tsx":"1","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\App.tsx":"2","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\components\\QuestionCard.tsx":"3","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\API.ts":"4","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\utils.ts":"5"},{"size":218,"mtime":1608713027812,"results":"6","hashOfConfig":"7"},{"size":2910,"mtime":1608891471889,"results":"8","hashOfConfig":"7"},{"size":857,"mtime":1608889447897,"results":"9","hashOfConfig":"7"},{"size":897,"mtime":1608846845429,"results":"10","hashOfConfig":"7"},{"size":94,"mtime":1608847250178,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"yn7eoy",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\index.tsx",[],["24","25"],"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\App.tsx",["26","27"],"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\components\\QuestionCard.tsx",[],"C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\API.ts",["28"],"import QuestionCard from './components/QuestionCard';\r\nimport { shuffleArray } from './utils';\r\n\r\nexport type Question = {\r\n  category: string;\r\n  correct_answer: string;\r\n  difficulty: string;\r\n  incorrect_answers: string[];\r\n  question: string;\r\n  type: string;\r\n};\r\n\r\nexport type QusetionState = Question & { answers: string[] };\r\nexport enum Difficulty {\r\n  EASY = 'easy',\r\n  MEDIUM = 'medium',\r\n  HARD = 'hard',\r\n}\r\n\r\nexport const fetchQuizQuestion = async (\r\n  amount: number,\r\n  difficulty: Difficulty\r\n) => {\r\n  const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n  const data = await (await fetch(endpoint)).json();\r\n  //console.log(data);\r\n\r\n  return data.results.map((question: Question) => ({\r\n    ...question,\r\n    answers: shuffleArray([\r\n      ...question.incorrect_answers,\r\n      question.correct_answer,\r\n    ]),\r\n  }));\r\n};\r\n","C:\\Users\\P\\Desktop\\projects\\tscrypt\\rrts\\src\\utils.ts",[],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":29,"column":10,"nodeType":"35","messageId":"36","endLine":29,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":99,"column":26,"nodeType":"39","messageId":"40","endLine":99,"endColumn":28},{"ruleId":"33","severity":1,"message":"41","line":1,"column":8,"nodeType":"35","messageId":"36","endLine":1,"endColumn":20},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"@typescript-eslint/no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'QuestionCard' is defined but never used.","no-global-assign","no-unsafe-negation"]